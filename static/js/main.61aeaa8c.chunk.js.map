{"version":3,"sources":["serviceWorker.js","utils/auth.js","utils/auth_effects.js","interceptor.js","redux/appActions.js","redux/snackbarActions.js","constants/index.js","services/optimiser_service.js","redux/loginActions.js","redux/strategyActions.js","redux/summaryActions.js","redux/strategyRollUpActions.js","redux/configureStore.js","components/Header.js","routes/login/index.js","routes/not_found/index.js","routes/create_strategy/constraints.js","routes/create_strategy/strategy_checkbox.js","routes/create_strategy/index.js","routes/summary/strategy_input.js","routes/summary/forcast_results.js","routes/strategy_visualization/index.js","routes/summary/index.js","routes/strategy_roll_up/sku_level_strategy_summary.js","routes/strategy_roll_up/class_level_strategy_summary.js","routes/strategy_roll_up/index.js","routes/index.js","index.js"],"names":["Boolean","window","location","hostname","match","authToken","getLogoutEffect","history","isLoggedIn","_","push","Auth","token","LocalStorageHelper","register","getToken","deregister","undefined","btoa","atob","localStorage","encodedObj","setItem","clear","user","getItem","handleError","store","error","response","data","timestamp","Date","now","status","axios","interceptors","request","use","config","headers","setBearerAuth","Authorization","Promise","reject","console","log","defaultState","createActions","ON_LOGIN","ON_LOGOUT","prefix","onLogin","onLogout","AppAction","handleActions","combineActions","state","payload","open","SHOW","HIDE","show","hide","SnackbarAction","CONSTRAINT_TYPES","CONTRAINT_KEYS","USER_END_POINT","process","LOGIN_API_ENDPOINT","USER_API","LOGIN","LOGOUT","SIGNUP","GET_USER_DATA","UPDATE_PROFILE","optimiserAPI","credentials","message","Axios","get","summaryList","strategyRollUpSummaryList","minimizeErosion","clearInventory","clearOldAgeProductFirst","strategyName","strategyClass","strategyWOS","strategyConstraints","constraints","forEach","item","constraintType","constraintValue","newSummary","strategyInput","WOS","forecastResults","generateRandomValues","erosion","EOH","EOHUnits","avgOBDisc","salesUnits","COGS","recoveryRate","classLevelSummary","className","classDesc","skuLevelSummary","SKU","SKUDesc","maxDisc","stepDisc","minDisc","digits","precison","Math","round","random","pow","username","password","FETCH_LOGOUT","a","async","FETCH_LOGIN","form","fetchLogin","fetchLogout","onInputChange","LoginAction","login","dispatch","cred","then","catch","logout","UPDATE_STRATEGY","GET_STRATEGY","id","updateStrategy","getStrategy","CreateStrategyAction","update","getSummary","GET_SUMMARY","summaryAction","getSkuLevelSummary","GET_SKU_LEVEL_SUMMARY","strategySummaryRollUpAction","rootReducer","combineReducers","appStore","loginStore","strategyData","snackbarStore","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","thunk","createLogger","createStore","Header","withRouter","connect","props","navItems","label","route","invalidRoute","find","pathname","to","Tabs","value","indicatorColor","textColor","map","index","Tab","key","component","Link","onClick","mapdispatchtoprops","showError","useEffect","fieldName","target","Paper","Grid","xs","FormControl","TextField","name","variant","type","placeholder","required","onChange","e","onKeyUp","event","keyCode","Button","color","size","length","NotFound","container","justify","spacing","useState","constraintTypeList","setConstraintList","selected","filter","unSelectList","includes","onConstraintChange","option","newList","defaultObj","splice","Constraint","InputLabel","Select","labelId","labelWidth","MenuItem","disabled","onCheck","checked","Checkbox","inputProps","chartList","primaryColor","getChartDataSet","chartItem","labels","summary","datasets","borderWidth","backgroundColor","borderColor","hoverBackgroundColor","hoverBorderColor","StrategyVisualization","sm","lg","RenderSummaryItem","wrap","snackbarStatus","snackbarText","handleSnackbarClose","basename","exact","path","Login","CreateStrategy","Summary","StrategyRollUpSummary","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","theme","createMuiTheme","palette","primary","main","secondary","interceptor","renderDom","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.61aeaa8c.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl) // eslint-disable-line no-undef\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","let authToken\nexport const Auth = {\n  register: (token) => {\n    authToken = token\n    LocalStorageHelper.register(authToken)\n  },\n\n  isLoggedIn: () => {\n    return !!authToken || !!LocalStorageHelper.getToken()\n  },\n\n  deregister: () => {\n    LocalStorageHelper.deregister()\n    authToken = undefined\n  },\n\n  getToken: () => {\n    let token = ''\n    authToken = authToken || LocalStorageHelper.getToken()\n    if (authToken) {\n      token = 'Bearer ' + authToken\n    }\n    return token\n  }\n}\n\nconst { btoa, atob, localStorage } = window || {}\nconst LocalStorageHelper = {\n  register (token) {\n    const encodedObj = token ? btoa(token) : ''\n    localStorage.setItem('USER', encodedObj)\n  },\n  deregister () {\n    localStorage.clear()\n  },\n  getToken () {\n    let user = localStorage.getItem('USER') || ''\n    if (user) {\n      user = user ? atob(user) : ''\n    }\n    return user\n  }\n}\n","export const getLogoutEffect = (history, isLoggedIn) => _ => {\n  if (!isLoggedIn) {\n    history.push('/login')\n  }\n}\n","import axios from 'axios'\nimport { Auth } from './utils'\n\n// const localStorage = window.localStorage\n\nconst setupInterceptors = store => {\n  axios.interceptors.request.use(\n    config => {\n      config.headers['content-type'] = 'application/json'\n      if (config.headers.setBearerAuth) {\n        config.headers.Authorization = Auth.getToken()\n        delete config.headers.setBearerAuth\n      }\n      // change any global config on request\n      // store.dispatch(showLoader())\n      return config\n    },\n    error => {\n      // Do something with request error\n      // store.dispatch(hideLoader())\n      handleError(store, error)\n      return Promise.reject(error)\n    }\n  )\n\n  axios.interceptors.response.use(\n    config => {\n      if (config.status === 200) {\n        console.log(config)\n        // change something on response success\n        // store.dispatch(showLoader())\n        return config\n      }\n    },\n    error => {\n      // store.dispatch(hideLoader())\n      handleError(store, error)\n      return Promise.reject(error)\n    }\n  )\n}\nconst handleError = (store, error) => {\n  const err = error.response ? error.response.data : error\n  err.timestamp = Date.now()\n  if (error && error.response && error.response.status === 406) {\n    /* localStorage.clear()\n    window.location.href = '/' */\n  }\n  /* if (\n    (err.statusCode === 500 &&\n      err.message === 'INTERNAL SERVER ERROR: jwt expired!!') ||\n    err.statusCode === 401\n  ) {\n    store.dispatch(errorHandler(err))\n    store.dispatch(clearAuth())\n  } else {\n    store.dispatch(errorHandler(err))\n  } */\n}\n\nexport default {\n  setupInterceptors\n}\n","import { createActions, handleActions, combineActions } from 'redux-actions'\nimport { Auth } from '../utils'\n\nconst defaultState = { isLoggedIn: Auth.isLoggedIn() }\n\nconst { onLogin, onLogout } = createActions({\n  ON_LOGIN: token => { Auth.register(token); return {} },\n  ON_LOGOUT: _ => { Auth.deregister(); return { } }\n}, { prefix: 'APP' })\nexport const AppAction = { onLogin, onLogout }\n\nexport default handleActions({ [combineActions(onLogin, onLogout)]: (state, { payload }) => ({ ...state, ...payload, isLoggedIn: Auth.isLoggedIn() }) }, defaultState)\n","import { createActions, handleActions, combineActions } from 'redux-actions'\n\nconst defaultState = { open: false }\nconst { show, hide } = createActions({\n  SHOW: (data = '') => ({ data, open: true }),\n  HIDE: _ => defaultState\n})\n\nexport const SnackbarAction = { show, hide }\n\nexport default handleActions({ [combineActions(show, hide)]: (state, { payload }) => payload }, defaultState)\n","// app constants here\nexport const CONSTRAINT_TYPES = ['Max Discount %', 'Min Discount %', 'Step Change Discount %']\nexport const CONTRAINT_KEYS = {\n  'Max Discount %': 'maxDisc', 'Min Discount %': 'minDisc', 'Step Change Discount %': 'stepDisc'\n}\n","import Axios from 'axios'\nimport { CONTRAINT_KEYS } from '../constants'\n\nconst USER_END_POINT = process.env.LOGIN_API_ENDPOINT + '/user'\nconst USER_API = {\n  LOGIN: USER_END_POINT + '/login',\n  LOGOUT: USER_END_POINT + '/logout',\n  SIGNUP: USER_END_POINT + '/signup',\n  GET_USER_DATA: USER_END_POINT + '/',\n  UPDATE_PROFILE: USER_END_POINT + '/updateProfile'\n}\n\nexport const optimiserAPI = {\n\n  login (credentials) {\n    return { data: { token: 'psadadj', message: 'Logged In Successfully' } }\n    // const Authorization = `Basic ${credentials}`\n    // return Axios.get(USER_API.LOGIN, { headers: { Authorization } })\n  },\n\n  getStrategyData () {\n    return Axios.get(USER_API.SIGNUP, { headers: { setBearerAuth: true } })\n  },\n\n  getSummaryList () {\n    return { data: summaryList }\n    // return Axios.get(USER_API.SIGNUP, { headers: { setBearerAuth: true } })\n  },\n\n  getStrategyRollUpSummary () {\n    return { data: strategyRollUpSummaryList }\n    // return Axios.get(USER_API.SIGNUP, { headers: { setBearerAuth: true } })\n  },\n\n  updateStrategy (data) {\n    const {\n      minimizeErosion,\n      clearInventory,\n      clearOldAgeProductFirst,\n      strategyName,\n      strategyClass,\n      strategyWOS,\n      strategyConstraints\n    } = data\n    const constraints = {}\n    strategyConstraints.forEach(item => {\n      if (item.constraintType) {\n        constraints[CONTRAINT_KEYS[item.constraintType]] = item.constraintValue + '%'\n      }\n    })\n    const newSummary = {\n      strategyName,\n      strategyClass,\n      minimizeErosion,\n      clearInventory,\n      clearOldAgeProductFirst,\n      strategyInput: {\n        WOS: strategyWOS,\n        ...constraints\n      },\n      forecastResults: {\n        WOS: generateRandomValues(1, 0),\n        erosion: generateRandomValues(6, 2),\n        EOH: generateRandomValues(6, 2),\n        EOHUnits: generateRandomValues(1, 0),\n        avgOBDisc: generateRandomValues(1, 0),\n        salesUnits: generateRandomValues(4, 0),\n        COGS: generateRandomValues(7, 1),\n        recoveryRate: generateRandomValues(0, 2)\n      }\n    }\n    summaryList.push(newSummary)\n    return { data: { message: 'Saved Successfully' } }\n    // return Axios.post(USER_API.UPDATE_PROFILE, userData, { headers: { setBearerAuth: true } })\n  },\n\n  logout () {\n    return { data: { message: 'Logged Out Successfully' } }\n    // return Axios.get(USER_API.LOGOUT, { headers: { setBearerAuth: true } })\n  }\n}\n\nconst strategyRollUpSummaryList = [{\n  classLevelSummary: {\n    className: '140 - className',\n    classDesc: 'Samsung TV\\'s',\n    avgOBDisc: '50%',\n    erosion: 1075395.51,\n    WOS: 10,\n    EOH: 28897705.1,\n    EOHUnits: 324,\n    salesUnits: 6218,\n    COGS: 5780894.5,\n    recoveryRate: 0.82\n  },\n  skuLevelSummary: [{\n    SKU: 786789,\n    SKUDesc: 'Samsung - 43\" Class-LED',\n    avgOBDisc: '40%',\n    erosion: 751549.6,\n    WOS: 7,\n    EOH: 273007.7,\n    EOHUnits: 324,\n    salesUnits: 3450,\n    COGS: 4699407.4,\n    recoveryRate: 0.8250\n  }, {\n    SKU: 786790,\n    SKUDesc: 'Samsung - 42\" Class-LED',\n    avgOBDisc: '50%',\n    erosion: 341549.4,\n    WOS: 6,\n    EOH: 273117.7,\n    EOHUnits: 315,\n    salesUnits: 8953,\n    COGS: 3599407.3,\n    recoveryRate: 0.4270\n  }, {\n    SKU: 786791,\n    SKUDesc: 'Samsung - 40\" Class-LED',\n    avgOBDisc: '30%',\n    erosion: 851549.5,\n    WOS: 8,\n    EOH: 272317.7,\n    EOHUnits: 310,\n    salesUnits: 7868,\n    COGS: 2344407.9,\n    recoveryRate: 0.5420\n  }]\n}]\n\nconst summaryList = [{\n  strategyName: 'Strategy001',\n  strategyClass: '',\n  minimizeErosion: true,\n  clearInventory: false,\n  clearOldAgeProductFirst: false,\n  strategyInput: {\n    WOS: 8,\n    maxDisc: '50%',\n    stepDisc: '5%',\n    minDisc: '5%'\n  },\n  forecastResults: {\n    WOS: 5,\n    erosion: 751549.67,\n    EOH: 273007.98,\n    EOHUnits: 3,\n    avgOBDisc: 10,\n    salesUnits: 6754,\n    COGS: 5738389.5,\n    recoveryRate: 0.72\n  }\n}]\n\nconst generateRandomValues = (digits, precison) => {\n  return Math.round(Math.random() * Math.pow(10, digits + precison)) / Math.pow(10, precison)\n}\n","import { createActions, handleActions, combineActions } from 'redux-actions'\nimport { SnackbarAction } from './snackbarActions'\nimport { optimiserAPI } from '../services'\nimport { AppAction } from './appActions'\n\nconst defaultState = { username: '', password: '' }\nconst login = ({ username, password }) => dispatch => {\n  const cred = window.btoa(`${username}:${password}`)\n  dispatch(fetchLogin(cred)).then(({ payload }) => {\n    dispatch(AppAction.onLogin(payload.token))\n    dispatch(SnackbarAction.show(payload.message))\n    dispatch(onInputChange(defaultState))\n  }).catch(error => {\n    const { response = { data: { error: 'Something went wrong' } } } = error\n    dispatch(SnackbarAction.show(response.data.error))\n  })\n}\nconst logout = _ => dispatch => {\n  dispatch(fetchLogout()).then(({ payload }) => {\n    dispatch(AppAction.onLogout())\n    dispatch(SnackbarAction.show(payload.message))\n    dispatch(onInputChange(defaultState))\n  }).catch(error => {\n    const { response = { data: { error: 'Something went wrong' } } } = error\n    dispatch(SnackbarAction.show(response.data.error))\n  })\n}\nconst { fetchLogin, fetchLogout, onInputChange } = createActions({\n  FETCH_LOGOUT: async _ => {\n    const response = await optimiserAPI.logout()\n    return response.data\n  },\n  FETCH_LOGIN: async (form) => {\n    const response = await optimiserAPI.login(form)\n    return response.data// 'Logged in successfully!!'\n  }\n}, 'ON_INPUT_CHANGE', { prefix: 'LOGIN' })\nexport const LoginAction = { login, logout, onInputChange }\n\nexport default handleActions({ [combineActions(onInputChange)]: (state, { payload }) => ({ ...state, ...payload }) }, defaultState)\n","import { createActions, handleActions, combineActions } from 'redux-actions'\nimport { SnackbarAction } from './snackbarActions'\nimport { optimiserAPI } from '../services'\n\nconst defaultState = {\n  minimizeErosion: true,\n  clearInventory: false,\n  clearOldAgeProductFirst: false,\n  strategyName: '',\n  strategyClass: 140,\n  strategyWOS: 5,\n  strategyConstraints: [{ constraintType: '', constraintValue: '' }]\n}\n\nconst update = data => dispatch => {\n  dispatch(updateStrategy(data)).then(({ payload }) => {\n    dispatch(SnackbarAction.show(payload))\n    dispatch(onInputChange(defaultState))\n  }).catch(error => {\n    const { response = { data: { error: 'Something went wrong' } } } = error\n    dispatch(SnackbarAction.show(response.data.error))\n  })\n}\nconst { updateStrategy, getStrategy, onInputChange } = createActions({\n  UPDATE_STRATEGY: async (form) => {\n    const response = await optimiserAPI.updateStrategy(form)\n    console.log(response)\n    return response.data.message // 'Update successful!!'\n  },\n  GET_STRATEGY: async (id) => {\n    const response = await optimiserAPI.getStrategyData(id)\n    return response.data\n  }\n}, 'ON_INPUT_CHANGE', { prefix: 'STRATEGY' })\nexport const CreateStrategyAction = { update, getStrategy, onInputChange }\n\nexport default handleActions({ [combineActions(onInputChange)]: (state, { payload }) => ({ ...state, ...payload }) }, defaultState)\n","import { createActions, handleActions, combineActions } from 'redux-actions'\nimport { optimiserAPI } from '../services'\n\nconst defaultState = []\n\nconst { getSummary } = createActions({\n  GET_SUMMARY: async _ => {\n    const response = await optimiserAPI.getSummaryList()\n    return response.data\n  }\n}, { prefix: 'SUMMARY' })\nexport const summaryAction = { getSummary }\n\nexport default handleActions({ [combineActions(getSummary)]: (state, { payload }) => payload }, defaultState)\n","import { createActions, handleActions, combineActions } from 'redux-actions'\nimport { optimiserAPI } from '../services'\n\nconst defaultState = []\n\nconst { getSkuLevelSummary } = createActions({\n  GET_SKU_LEVEL_SUMMARY: async _ => {\n    const response = await optimiserAPI.getStrategyRollUpSummary()\n    return response.data\n  }\n}, { prefix: 'ROLLUP' })\nexport const strategySummaryRollUpAction = { getSkuLevelSummary }\n\nexport default handleActions({ [combineActions(getSkuLevelSummary)]: (state, { payload }) => payload }, defaultState)\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport promiseMiddleware from 'redux-promise'\n\nimport appStore from './appActions'\nimport snackbarStore from './snackbarActions'\nimport loginStore from './loginActions'\nimport strategyData from './strategyActions'\nimport summaryList from './summaryActions'\nimport strategyRollUpSummaryList from './strategyRollUpActions'\n\nconst rootReducer = combineReducers({\n  appStore,\n  loginStore,\n  strategyData,\n  summaryList,\n  strategyRollUpSummaryList,\n  snackbarStore\n})\n\nconst createStoreWithMiddleware = applyMiddleware(\n  promiseMiddleware,\n  thunk,\n  createLogger()\n)(createStore)\n\nexport function configureStore (initialState) {\n  const store = createStoreWithMiddleware(rootReducer, initialState)\n  return store\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { LoginAction } from '../redux'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nconst Component = props => {\n  const { isLoggedIn, location, logout } = props\n\n  const navItems = [{\n    label: 'Create Strategy',\n    route: '/create_strategy'\n  },\n  {\n    label: 'Optimisation Summary',\n    route: '/summary'\n  },\n  {\n    label: 'Strategy Roll Up',\n    route: '/strategy_roll_up'\n  }]\n\n  const invalidRoute = !navItems.find(item => item.route === location.pathname)\n\n  return (\n    <header className='header-wrapper'>\n      <Link className='menu-link' to='/create_strategy'><div className='logo-container' /></Link>\n      <div className='menu-container'>\n        {!invalidRoute && isLoggedIn &&\n          <Tabs\n            value={location.pathname}\n            indicatorColor='primary'\n            textColor='primary'\n          >\n            {navItems.map((item, index) => (<Tab label={item.label} key={index} value={item.route} component={Link} to={item.route} />))}\n            <Tab label='Logout' onClick={logout} />\n          </Tabs>}\n      </div>\n    </header>\n  )\n}\n\nconst mapStateToProps = ({ appStore: { isLoggedIn } }) => ({ isLoggedIn })\nconst { logout } = LoginAction\nexport const Header = withRouter(connect(mapStateToProps, { logout })(Component))\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { TextField, FormControl, Button, Paper, Grid } from '@material-ui/core'\n\nimport { LoginAction, SnackbarAction } from '../../redux'\n\nconst Login = (props) => {\n  useEffect(() => { isLoggedIn && props.history.push('/create_strategy') })\n  const { username, password, isLoggedIn } = props\n\n  const onInputChange = ({ target: { value } }, fieldName) => {\n    props.onInputChange({ [fieldName]: value })\n  }\n\n  const onLoginClick = (event) => {\n    if (username.length <= 0 || password.length <= 0) {\n      return props.showError('Enter valid mobile & password')\n    }\n    props.login({ username, password })\n  }\n  const onPasswordEnter = event => (event.keyCode === 13) && props.login({ username, password })\n\n  return (\n    <Paper className='login-content'>\n      <Grid item xs={12} className='page-helper-text'>Enter your credentials</Grid>\n      <form className='login-form'>\n        <FormControl className='form-control'>\n          <TextField\n            name='username'\n            label='User Name'\n            variant='outlined'\n            type='text'\n            placeholder='User Name'\n            className='login-input'\n            required\n            value={username}\n            onChange={e => onInputChange(e, 'username')}\n          />\n        </FormControl>\n        <FormControl className='form-control'>\n          <TextField\n            name='password'\n            label='Password'\n            variant='outlined'\n            type='password'\n            placeholder='Password'\n            className='login-input'\n            required\n            value={password}\n            onChange={e => onInputChange(e, 'password')}\n            onKeyUp={onPasswordEnter}\n          />\n        </FormControl>\n      </form>\n      <Button\n        color='primary'\n        size='large'\n        variant='contained'\n        className='login-arrow'\n        onClick={onLoginClick}\n      >Login\n      </Button>\n    </Paper>\n  )\n}\n\nconst mapStateToProps = ({ loginStore, appStore: { isLoggedIn } }) => ({ ...loginStore, isLoggedIn })\n\nconst { onInputChange, login } = LoginAction\nconst mapdispatchtoprops = {\n  login,\n  onInputChange,\n  showError: SnackbarAction.show\n}\nexport default connect(mapStateToProps, mapdispatchtoprops)(Login)\n","import React from 'react'\nimport { Grid, Paper } from '@material-ui/core'\n\nconst NotFound = props => {\n  return (\n    <Grid container justify='center' spacing={3}>\n      <Grid item xs={12}>\n        <Paper className='not-found' />\n      </Grid>\n    </Grid>\n  )\n}\nexport default NotFound\n","import React, { useEffect, useState } from 'react'\nimport { Grid, FormControl, TextField, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport Delete from '@material-ui/icons/Delete'\nimport { CONSTRAINT_TYPES } from '../../constants'\n\nexport default function (props) {\n  const { strategyConstraints, onInputChange } = props\n  const [constraintTypeList, setConstraintList] = useState([])\n  useEffect(() => {\n    const selected = strategyConstraints.filter(({ constraintType }) => !!constraintType).map(item => item.constraintType)\n    const unSelectList = CONSTRAINT_TYPES.filter(item => !selected.includes(item))\n    setConstraintList(unSelectList)\n  }, [strategyConstraints])\n  const onConstraintChange = (data, index, option) => {\n    const newList = [...strategyConstraints]\n    const defaultObj = { constraintType: '', constraintValue: '' }\n    console.log(option)\n    if (option === 'pushConstraint' && strategyConstraints.length < 3) {\n      newList.push(defaultObj)\n    }\n    if (option === 'delete') {\n      newList.splice(index, 1)\n      if (newList.length < 1) { newList.push(defaultObj) }\n    } else { newList.splice(index, 1, data) }\n    onInputChange({ strategyConstraints: newList })\n  }\n\n  const renderConstraints = _ => strategyConstraints.map((item, index) => (\n    <Constraint\n      key={`${index}-${item.type}`}\n      index={index}\n      {...item}\n      constraintTypeList={constraintTypeList}\n      onConstraintChange={onConstraintChange}\n    />\n  ))\n  return (\n    <Grid container>\n      {renderConstraints()}\n    </Grid>\n  )\n}\n\nconst Constraint = props => {\n  const { constraintType, constraintTypeList, index, constraintValue, onConstraintChange } = props\n\n  const onInputChange = ({ target: { value } }, fieldName) => {\n    const option = (constraintType === '' && value && fieldName === 'constraintType') ? 'pushConstraint' : ''\n    onConstraintChange({ constraintType, constraintValue, [fieldName]: value }, index, option)\n  }\n  return (\n    <Grid container>\n      <Grid item xs={6}>\n        <FormControl variant='outlined' className='form-control'>\n          <InputLabel id='demo-simple-select-outlined-label'>Constraints</InputLabel>\n          <Select\n            labelId='demo-simple-select-outlined-label'\n            id='demo-simple-select-outlined'\n            labelWidth={72}\n            value={constraintType}\n            onChange={e => onInputChange(e, 'constraintType')}\n          >\n            {constraintType && <MenuItem key={constraintType} value={constraintType}>{constraintType}</MenuItem>}\n            {constraintTypeList.map(item => {\n              return (<MenuItem key={item} value={item}>{item}</MenuItem>)\n            })}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={5} className='contraint-value'>\n        <FormControl className='form-control'>\n          <TextField\n            name='strategy constraint'\n            label='Value'\n            variant='outlined'\n            // type='text'\n            type='number'\n            placeholder={constraintType}\n            className='{styles.loginInput}'\n            required\n            disabled={!constraintType}\n            value={constraintValue}\n            onChange={e => onInputChange(e, 'constraintValue')}\n          />\n        </FormControl>\n      </Grid>\n      <Grid item xs={1} className='delete-container' onClick={e => onConstraintChange(null, index, 'delete')}>\n        <Delete />\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Grid,  Checkbox, InputLabel } from '@material-ui/core'\n\nexport default (props) => {\n  const { minimizeErosion, clearInventory, clearOldAgeProductFirst, onInputChange } = props\n  const onCheck = ({ target:{ checked } }, fieldName)=>{\n    onInputChange({ [fieldName]: !!checked })\n  }\n  return (\n    <Grid container>\n      <InputLabel>Strategy : </InputLabel>\n      <Grid container className='checkbox-container'>\n        <Grid item>\n          <InputLabel className='checkbox-label'>\n            <Checkbox\n              checked={minimizeErosion}\n              value='Minimise Errosion'\n              color='primary'\n              disabled\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            <span>Minimise Errosion</span>\n          </InputLabel>\n        </Grid>\n        <Grid item>\n          <InputLabel className='checkbox-label'>\n            <Checkbox\n              checked={clearInventory}\n              onChange={ e => onCheck(e,'clearInventory') }\n              value='Clear Inventory'\n              color='primary'\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            <span>Clear Inventory</span>\n          </InputLabel>\n        </Grid>\n        <Grid item>\n          <InputLabel className='checkbox-label'>\n            <Checkbox\n              checked={clearOldAgeProductFirst}\n              onChange={ e => onCheck(e,'clearOldAgeProductFirst') }\n              value='Clear Old Age Product First'\n              color='primary'\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            <span>Clear Old Age Product First</span>\n          </InputLabel>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Paper, TextField, FormControl, Button, InputLabel, Select, MenuItem, Grid } from '@material-ui/core'\nimport { CreateStrategyAction, SnackbarAction } from '../../redux'\nimport { getLogoutEffect } from '../../utils'\nimport Constraints from './constraints'\nimport StrategyCheckbox from './strategy_checkbox'\n\nconst CreateEditStrategy = (props) => {\n  const { strategyName, strategyClass, strategyWOS, strategyConstraints, minimizeErosion, clearInventory, clearOldAgeProductFirst, isLoggedIn } = props\n  useEffect(getLogoutEffect(props.history, isLoggedIn), [isLoggedIn])\n\n  const onInputChange = ({ target: { value } }, fieldName) => {\n    props.onInputChange({ [fieldName]: value })\n  }\n\n  const onSaveClick = (event) => {\n    if (strategyName.length <= 0 || strategyClass.length <= 0) {\n      return props.showError('Enter valid strategyName & strategyClass')\n    }\n    props.update({ strategyName, strategyClass, strategyWOS, strategyConstraints, minimizeErosion, clearInventory, clearOldAgeProductFirst })\n    props.history.push('/summary')\n  }\n\n  return (\n    <Paper className='create-strategy'>\n      <Grid item xs={12} className='page-helper-text'>Create a Strategy</Grid>\n      <form className='strategy-form'>\n        <Grid item xs={12}>\n          <FormControl className='form-control'>\n            <TextField\n              name='strategy name'\n              label='Name'\n              variant='outlined'\n              type='text'\n              placeholder='Create a name'\n              required\n              value={strategyName}\n              onChange={e => onInputChange(e, 'strategyName')}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={6}>\n          <FormControl variant='outlined' className='form-control'>\n            <InputLabel id='strategy-class-select-label'> Class </InputLabel>\n            <Select\n              labelId='strategy-class-select-label'\n              id='strategy-class-select'\n              labelWidth={37}\n              value={strategyClass}\n              onChange={e => onInputChange(e, 'strategyClass')}\n            >\n              <MenuItem value={140}>140</MenuItem>\n              <MenuItem value={10}>10</MenuItem>\n              <MenuItem value={11}>11</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <StrategyCheckbox\n          minimizeErosion={minimizeErosion}\n          clearInventory={clearInventory}\n          clearOldAgeProductFirst={clearOldAgeProductFirst}\n          onInputChange={props.onInputChange}\n        />\n        <Grid item xs={6}>\n          <FormControl className='form-control'>\n            <TextField\n              name='strategy name'\n              label='Class Weeks Of Supply'\n              variant='outlined'\n              // type='text'\n              placeholder='Weeks Of Supply'\n              type='number'\n              required\n              value={strategyWOS}\n              onChange={e => onInputChange(e, 'strategyWOS')}\n            />\n          </FormControl>\n        </Grid>\n        <Constraints\n          strategyConstraints={strategyConstraints}\n          onInputChange={props.onInputChange}\n        />\n      </form>\n      <Button color='primary' size='large' variant='contained' onClick={onSaveClick}> Submit </Button>\n    </Paper>\n  )\n}\n\nconst mapStateToProps = ({ strategyData, appStore: { isLoggedIn } }) => ({ ...strategyData, isLoggedIn })\n\nconst mapdispatchtoprops = {\n  ...CreateStrategyAction,\n  showError: SnackbarAction.show\n}\nexport default connect(mapStateToProps, mapdispatchtoprops)(CreateEditStrategy)\n","import React from 'react'\nimport { Grid } from '@material-ui/core'\n\nexport default function ({ data, strategyName }) {\n  return (\n    <Grid container>\n      <Grid container className='summary-header'>\n        <Grid item xs={12}>{strategyName}</Grid>\n      </Grid>\n      <Grid container className='summary-header'>\n        <Grid item xs={8}>Strategy Input</Grid>\n        <Grid item xs={4}>Value</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={8}>Weeks Of Supply</Grid>\n        <Grid item xs={4}>{data.WOS}</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={8}>Step Discount</Grid>\n        <Grid item xs={4}>{data.stepDisc}</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={8}>Max Discount</Grid>\n        <Grid item xs={4}>{data.maxDisc}</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={8}>Min Discount</Grid>\n        <Grid item xs={4}>{data.minDisc}</Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Grid } from '@material-ui/core'\n\nexport default function ({ data }) {\n  return (\n    <Grid container>\n      <Grid container className='summary-header'>\n        <Grid item xs={8}>Forcasted Results</Grid>\n        <Grid item xs={4}>Value</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={8}>Weeks Of Supply</Grid>\n        <Grid item xs={4}>{data.WOS}</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={8}>Erosion $</Grid>\n        <Grid item xs={4}>{data.erosion}</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={8}>EOH $</Grid>\n        <Grid item xs={4}>{data.EOH}</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={8}>EOH Units</Grid>\n        <Grid item xs={4}>{data.EOHUnits}</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={8}>Avg OB %</Grid>\n        <Grid item xs={4}>{data.avgOBDisc}</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={8}>Sales Units</Grid>\n        <Grid item xs={4}>{data.salesUnits}</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={8}>COGS</Grid>\n        <Grid item xs={4}>{data.COGS}</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={8}>Recovery Rate</Grid>\n        <Grid item xs={4}>{data.recoveryRate}</Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Grid, Paper } from '@material-ui/core'\nimport { Bar } from 'react-chartjs-2'\n\nconst chartList = [\n  { key: 'WOS', label: 'Weeks Of Supply', primaryColor: a => `rgba(255,99,132,${a})` },\n  { key: 'erosion', label: 'Erosion', primaryColor: a => `rgba(255,132,99,${a})` },\n  { key: 'EOH', label: 'Ending On Hand Dollars', primaryColor: a => `rgba(132,255,99,${a})` },\n  { key: 'EOHUnits', label: 'Ending On Hand Units', primaryColor: a => `rgba(132,99,255,${a})` },\n  { key: 'avgOBDisc', label: 'Average OB Discount', primaryColor: a => `rgba(99,255,132,${a})` },\n  { key: 'salesUnits', label: 'Sales Units', primaryColor: a => `rgba(99,132,255,${a})` },\n  { key: 'COGS', label: 'Cost Of Goods Sold', primaryColor: a => `rgba(255,190,25,${a})` },\n  { key: 'recoveryRate', label: 'Recovery Rate', primaryColor: a => `rgba(255,25,190,${a})` }\n]\n\nconst getChartDataSet = (summaryList, chartItem) => {\n  const labels = summaryList.map(summary => summary.strategyName)\n  return {\n    labels,\n    datasets: [\n      {\n        label: chartItem.label,\n        borderWidth: 1,\n        backgroundColor: chartItem.primaryColor('0.5'),\n        borderColor: chartItem.primaryColor('1'),\n        hoverBackgroundColor: chartItem.primaryColor('0.8'),\n        hoverBorderColor: chartItem.primaryColor('1'),\n        data: summaryList.map(summary => summary.forecastResults[chartItem.key])\n      }\n    ]\n  }\n}\nconst StrategyVisualization = props => {\n  const { summaryList } = props\n  return (\n    <div>\n      <h2>Strategy Visual Comparisons</h2>\n      <Grid container spacing={2}>\n        {chartList.map(item => (\n          <Grid key={item.key} item xs={12} sm={6} lg={4}>\n            <Paper>\n              <Bar\n                data={getChartDataSet(summaryList, item)}\n              />\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  )\n}\n\nexport default StrategyVisualization\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Grid, Paper } from '@material-ui/core'\nimport { summaryAction } from '../../redux'\nimport { getLogoutEffect } from '../../utils'\nimport StrategyInput from './strategy_input'\nimport ForcastResults from './forcast_results'\nimport StrategyVisualization from '../strategy_visualization'\n\nconst RenderSummaryItem = ({ summaryList }) => {\n  return summaryList.map((item, index) => {\n    return (\n      <Grid key={index} item xs={12} sm={6} lg={4}>\n        <Paper className='summary-item'>\n          <StrategyInput strategyName={item.strategyName} data={item.strategyInput} />\n          <ForcastResults data={item.forecastResults} />\n          <span className='input-group-btn'>\n            <Link to='/strategy_roll_up'>See more detail</Link>\n          </span>\n        </Paper>\n      </Grid>\n    )\n  })\n}\nconst Summary = props => {\n  const { summaryList, isLoggedIn, history, getSummary } = props\n  useEffect(getLogoutEffect(history, isLoggedIn), [isLoggedIn])\n  useEffect(() => { isLoggedIn && getSummary() }, [isLoggedIn, getSummary])\n  return (\n    <div className='summary-container'>\n      <Grid container>\n        <Paper className='summary-details'>\n          <Grid item xs={12} className='page-helper-text'>Optimisation Summary</Grid>\n          <Grid item xs={3}><strong>Name :</strong> TV's - 4k- Holiday</Grid>\n          <Grid item xs={3}><strong>Class :</strong> 140 - className</Grid>\n        </Paper>\n      </Grid>\n      <Grid container spacing={2} wrap='wrap'>\n        <RenderSummaryItem summaryList={summaryList} />\n        <Grid item xs={12} sm={6} lg={4}>\n          <Link to='/create_strategy' className='add-summary-container'>\n            <Paper className='summary-item add-summary'>\n              <div>Add Another</div><div>Strategy</div>\n            </Paper>\n          </Link>\n        </Grid>\n      </Grid>\n      <StrategyVisualization summaryList={summaryList} />\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ summaryList, appStore: { isLoggedIn } }) => ({ summaryList, isLoggedIn })\n\nexport default connect(mapStateToProps, { ...summaryAction })(Summary)\n","import React from 'react'\nimport { Grid } from '@material-ui/core'\n\nexport default function ({ data }) {\n  return (\n    <Grid container>\n      <Grid container className='roll-up-header'>\n        <Grid item xs={2}>SKU</Grid>\n        <Grid item xs={3}>SKU Description</Grid>\n        <Grid item xs={1}>Avg OB %</Grid>\n        <Grid item xs={1}>Erosion $</Grid>\n        <Grid item xs={1}>WOS</Grid>\n        <Grid item xs={1}>EOH Units</Grid>\n        <Grid item xs={1}>Sales Units</Grid>\n        <Grid item xs={1}>COGS</Grid>\n        <Grid item xs={1}>Recovery Rate</Grid>\n      </Grid>\n      {data.map((item, index) => (\n        <Grid key={index} container>\n          <Grid item xs={2}>{item.SKU}</Grid>\n          <Grid item xs={3}>{item.SKUDesc}</Grid>\n          <Grid item xs={1}>{item.avgOBDisc}</Grid>\n          <Grid item xs={1}>{item.erosion}</Grid>\n          <Grid item xs={1}>{item.WOS}</Grid>\n          <Grid item xs={1}>{item.EOHUnits}</Grid>\n          <Grid item xs={1}>{item.salesUnits}</Grid>\n          <Grid item xs={1}>{item.COGS}</Grid>\n          <Grid item xs={1}>{item.recoveryRate}</Grid>\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Grid } from '@material-ui/core'\n\nexport default function ({ data }) {\n  return (\n\n    <Grid container>\n      <Grid container className='summary-header'>\n        <Grid item xs={12}>TV's - 4k- Holiday</Grid>\n      </Grid>\n      <Grid container className='roll-up-header'>\n        <Grid item xs={2}>Class</Grid>\n        <Grid item xs={3}>Class Description</Grid>\n        <Grid item xs={1}>Avg OB %</Grid>\n        <Grid item xs={1}>Erosion $</Grid>\n        <Grid item xs={1}>WOS</Grid>\n        <Grid item xs={1}>EOH Units</Grid>\n        <Grid item xs={1}>Sales Units</Grid>\n        <Grid item xs={1}>COGS</Grid>\n        <Grid item xs={1}>Recovery Rate</Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={2}>{data.className}</Grid>\n        <Grid item xs={3}>{data.classDesc}</Grid>\n        <Grid item xs={1}>{data.avgOBDisc}</Grid>\n        <Grid item xs={1}>{data.erosion}</Grid>\n        <Grid item xs={1}>{data.WOS}</Grid>\n        <Grid item xs={1}>{data.EOHUnits}</Grid>\n        <Grid item xs={1}>{data.salesUnits}</Grid>\n        <Grid item xs={1}>{data.COGS}</Grid>\n        <Grid item xs={1}>{data.recoveryRate}</Grid>\n      </Grid>\n    </Grid>\n\n  )\n}\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Grid, Paper } from '@material-ui/core'\nimport { strategySummaryRollUpAction } from '../../redux'\nimport { getLogoutEffect } from '../../utils'\nimport SkuLevelStrategySummary from './sku_level_strategy_summary'\nimport ClassLevelStrategySummary from './class_level_strategy_summary'\n\nconst RenderSummaryItem = ({ strategyRollUpSummaryList }) => {\n  return strategyRollUpSummaryList.map((item, index) => {\n    return (\n      <Grid key={index} item xs={12}>\n        <Paper className='summary-item'>\n          <ClassLevelStrategySummary data={item.classLevelSummary} />\n          <SkuLevelStrategySummary data={item.skuLevelSummary} />\n        </Paper>\n      </Grid>\n    )\n  })\n}\nconst StrategyRollUpSummary = props => {\n  const { strategyRollUpSummaryList, isLoggedIn, history, getSkuLevelSummary } = props\n  useEffect(getLogoutEffect(history, isLoggedIn), [isLoggedIn])\n  useEffect(() => { isLoggedIn && getSkuLevelSummary() }, [isLoggedIn, getSkuLevelSummary])\n  return (\n    <div className='summary-container'>\n      <Grid container>\n        <Paper className='summary-details'>\n          <Grid item xs={12} className='page-helper-text roll-up-strategy'>Strategy Roll Up</Grid>\n        </Paper>\n      </Grid>\n      <Grid container spacing={2} wrap='wrap'>\n        <RenderSummaryItem strategyRollUpSummaryList={strategyRollUpSummaryList} />\n      </Grid>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ strategyRollUpSummaryList, appStore: { isLoggedIn } }) => ({ strategyRollUpSummaryList, isLoggedIn })\n\nexport default connect(mapStateToProps, { ...strategySummaryRollUpAction })(StrategyRollUpSummary)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect, Switch, BrowserRouter } from 'react-router-dom'\nimport { Snackbar } from '@material-ui/core'\n\nimport { SnackbarAction } from '../redux'\nimport { Header } from '../components'\n\nimport Login from './login'\nimport NotFound from './not_found'\nimport CreateStrategy from './create_strategy'\nimport Summary from './summary'\nimport StrategyRollUpSummary from './strategy_roll_up'\n\nconst App = (props) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Header />\n      <div className='main-wrapper'>\n        <Switch>\n          <Route exact path='/' component={Login} />\n          <Route exact path='/404' component={NotFound} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/create_strategy' component={CreateStrategy} />\n          <Route exact path='/summary' component={Summary} />\n          <Route exact path='/strategy_roll_up' component={StrategyRollUpSummary} />\n          <Redirect to='/404' />\n        </Switch>\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={props.snackbarStatus}\n          key='topBottom'\n          autoHideDuration={2000}\n          onClose={props.handleSnackbarClose}\n          ContentProps={{\n            'aria-describedby': 'message-id'\n          }}\n          message={<span id='message-id'>{props.snackbarText}</span>}\n        />\n      </div>\n    </BrowserRouter>\n  )\n}\n\nconst mapStateToProps = ({ snackbarStore: { open, data } }) => ({\n  snackbarStatus: open || false,\n  snackbarText: data || ''\n})\n\nexport default connect(mapStateToProps, { handleSnackbarClose: SnackbarAction.hide })(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport interceptor from './interceptor'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\nimport { configureStore } from './redux'\nimport './styles/index.scss'\nimport App from './routes'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: '#0b66af' },\n    secondary: { main: '#686868' }\n  }\n})\nconst reduxState = {}\nconst store = configureStore(reduxState)\ninterceptor.setupInterceptors(store)\nconst renderDom = (\n  <Provider store={store}>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </Provider>\n)\n\nReactDOM.render(renderDom, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}